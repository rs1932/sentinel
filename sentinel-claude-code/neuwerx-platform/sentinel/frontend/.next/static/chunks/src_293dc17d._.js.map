{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/store/settings.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\nexport interface AppSettings {\n  // Application Settings\n  appName: string;\n  appDescription: string;\n  maintenanceMode: boolean;\n  registrationEnabled: boolean;\n  \n  // Notification Settings\n  emailNotifications: boolean;\n  pushNotifications: boolean;\n  systemAlerts: boolean;\n  \n  // Security Settings\n  mfaRequired: boolean;\n  sessionTimeout: number;\n  passwordComplexity: boolean;\n  \n  // Theme Settings\n  theme: 'light' | 'dark' | 'system';\n  primaryColor: string;\n  \n  // Localization\n  defaultLocale: string;\n  timezone: string;\n}\n\ninterface SettingsState {\n  settings: AppSettings;\n  isLoading: boolean;\n  lastSaved: Date | null;\n}\n\ninterface SettingsActions {\n  updateSetting: <K extends keyof AppSettings>(key: K, value: AppSettings[K]) => void;\n  updateMultipleSettings: (updates: Partial<AppSettings>) => void;\n  resetSettings: () => void;\n  saveSettings: () => Promise<void>;\n  loadSettings: () => Promise<void>;\n  setLoading: (loading: boolean) => void;\n}\n\n// Default settings\nconst defaultSettings: AppSettings = {\n  // Application Settings\n  appName: 'Sentinel',\n  appDescription: 'Multi-tenant User Management Platform',\n  maintenanceMode: false,\n  registrationEnabled: true,\n  \n  // Notification Settings\n  emailNotifications: true,\n  pushNotifications: false,\n  systemAlerts: true,\n  \n  // Security Settings\n  mfaRequired: false,\n  sessionTimeout: 3600,\n  passwordComplexity: true,\n  \n  // Theme Settings\n  theme: 'light',\n  primaryColor: 'blue',\n  \n  // Localization\n  defaultLocale: 'en-US',\n  timezone: 'America/New_York',\n};\n\nexport const useSettingsStore = create<SettingsState & SettingsActions>()(\n  persist(\n    (set, get) => ({\n      // State\n      settings: defaultSettings,\n      isLoading: false,\n      lastSaved: null,\n\n      // Actions\n      updateSetting: (key, value) => {\n        set((state) => ({\n          settings: {\n            ...state.settings,\n            [key]: value,\n          },\n        }));\n      },\n\n      updateMultipleSettings: (updates) => {\n        set((state) => ({\n          settings: {\n            ...state.settings,\n            ...updates,\n          },\n        }));\n      },\n\n      resetSettings: () => {\n        set({\n          settings: defaultSettings,\n          lastSaved: null,\n        });\n      },\n\n      saveSettings: async () => {\n        const { settings } = get();\n        set({ isLoading: true });\n\n        try {\n          // TODO: Replace with actual API call\n          // await apiClient.settings.update(settings);\n          \n          // Mock API delay\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          set({ \n            isLoading: false,\n            lastSaved: new Date(),\n          });\n          \n          console.log('Settings saved:', settings);\n        } catch (error) {\n          set({ isLoading: false });\n          console.error('Failed to save settings:', error);\n          throw error;\n        }\n      },\n\n      loadSettings: async () => {\n        set({ isLoading: true });\n\n        try {\n          // TODO: Replace with actual API call\n          // const response = await apiClient.settings.get();\n          \n          // Mock API delay and response\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // For now, use stored settings or defaults\n          const { settings } = get();\n          \n          set({ \n            isLoading: false,\n            settings,\n          });\n          \n          console.log('Settings loaded:', settings);\n        } catch (error) {\n          set({ \n            isLoading: false,\n            settings: defaultSettings,\n          });\n          console.error('Failed to load settings:', error);\n        }\n      },\n\n      setLoading: (loading) => {\n        set({ isLoading: loading });\n      },\n    }),\n    {\n      name: 'settings-storage',\n      storage: createJSONStorage(() => localStorage),\n      partialize: (state) => ({\n        settings: state.settings,\n        lastSaved: state.lastSaved,\n      }),\n    }\n  )\n);"],"names":[],"mappings":";;;AAAA;AACA;;;AA2CA,mBAAmB;AACnB,MAAM,kBAA+B;IACnC,uBAAuB;IACvB,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IAErB,wBAAwB;IACxB,oBAAoB;IACpB,mBAAmB;IACnB,cAAc;IAEd,oBAAoB;IACpB,aAAa;IACb,gBAAgB;IAChB,oBAAoB;IAEpB,iBAAiB;IACjB,OAAO;IACP,cAAc;IAEd,eAAe;IACf,eAAe;IACf,UAAU;AACZ;AAEO,MAAM,mBAAmB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IACnC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,KAAK,MAAQ,CAAC;QACb,QAAQ;QACR,UAAU;QACV,WAAW;QACX,WAAW;QAEX,UAAU;QACV,eAAe,CAAC,KAAK;YACnB,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU;wBACR,GAAG,MAAM,QAAQ;wBACjB,CAAC,IAAI,EAAE;oBACT;gBACF,CAAC;QACH;QAEA,wBAAwB,CAAC;YACvB,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU;wBACR,GAAG,MAAM,QAAQ;wBACjB,GAAG,OAAO;oBACZ;gBACF,CAAC;QACH;QAEA,eAAe;YACb,IAAI;gBACF,UAAU;gBACV,WAAW;YACb;QACF;QAEA,cAAc;YACZ,MAAM,EAAE,QAAQ,EAAE,GAAG;YACrB,IAAI;gBAAE,WAAW;YAAK;YAEtB,IAAI;gBACF,qCAAqC;gBACrC,6CAA6C;gBAE7C,iBAAiB;gBACjB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;gBAEjD,IAAI;oBACF,WAAW;oBACX,WAAW,IAAI;gBACjB;gBAEA,QAAQ,GAAG,CAAC,mBAAmB;YACjC,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,WAAW;gBAAM;gBACvB,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,MAAM;YACR;QACF;QAEA,cAAc;YACZ,IAAI;gBAAE,WAAW;YAAK;YAEtB,IAAI;gBACF,qCAAqC;gBACrC,mDAAmD;gBAEnD,8BAA8B;gBAC9B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;gBAEjD,2CAA2C;gBAC3C,MAAM,EAAE,QAAQ,EAAE,GAAG;gBAErB,IAAI;oBACF,WAAW;oBACX;gBACF;gBAEA,QAAQ,GAAG,CAAC,oBAAoB;YAClC,EAAE,OAAO,OAAO;gBACd,IAAI;oBACF,WAAW;oBACX,UAAU;gBACZ;gBACA,QAAQ,KAAK,CAAC,4BAA4B;YAC5C;QACF;QAEA,YAAY,CAAC;YACX,IAAI;gBAAE,WAAW;YAAQ;QAC3B;IACF,CAAC,GACD;IACE,MAAM;IACN,SAAS,CAAA,GAAA,gJAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;IACjC,YAAY,CAAC,QAAU,CAAC;YACtB,UAAU,MAAM,QAAQ;YACxB,WAAW,MAAM,SAAS;QAC5B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,KAGoC;QAHpC,EACd,SAAS,EACT,GAAG,OAC+C,GAHpC;IAId,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/dashboard/SettingsManagement.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuthStore } from '@/store/auth';\nimport { useSettingsStore } from '@/store/settings';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Settings, \n  Bell, \n  Shield, \n  Palette, \n  Globe, \n  Database,\n  Mail,\n  Save,\n  RefreshCw\n} from 'lucide-react';\n\nexport function SettingsManagement() {\n  const { userRole } = useAuthStore();\n  const { \n    settings, \n    isLoading, \n    lastSaved,\n    updateSetting, \n    saveSettings, \n    resetSettings,\n    loadSettings \n  } = useSettingsStore();\n  \n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  // Load settings on component mount\n  useEffect(() => {\n    loadSettings();\n  }, [loadSettings]);\n\n  const handleSettingChange = <K extends keyof typeof settings>(key: K, value: typeof settings[K]) => {\n    updateSetting(key, value);\n    // Clear save success message when user makes changes\n    if (saveSuccess) {\n      setSaveSuccess(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    try {\n      await saveSettings();\n      setSaveSuccess(true);\n      // Clear success message after 3 seconds\n      setTimeout(() => setSaveSuccess(false), 3000);\n    } catch (error) {\n      console.error('Failed to save settings:', error);\n      // You could add error handling here\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleReset = () => {\n    resetSettings();\n    setSaveSuccess(false);\n  };\n\n  const isSystemAdmin = userRole === 'super_admin';\n\n  return (\n    <div className=\"space-y-6 max-w-4xl\">\n      {/* Page header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Settings</h1>\n          <p className=\"text-gray-600\">\n            Manage application settings and configuration\n          </p>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button variant=\"outline\" onClick={handleReset} disabled={isLoading}>\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\n            Reset\n          </Button>\n          <Button \n            onClick={handleSave} \n            disabled={isSaving || isLoading}\n            className=\"bg-blue-600 hover:bg-blue-700\"\n          >\n            {isSaving ? (\n              <>\n                <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                Saving...\n              </>\n            ) : (\n              <>\n                <Save className=\"mr-2 h-4 w-4\" />\n                Save Changes\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n\n      {/* Status Messages */}\n      {saveSuccess && (\n        <div className=\"bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-lg\">\n          <div className=\"flex items-center space-x-2\">\n            <Save className=\"h-4 w-4\" />\n            <span className=\"text-sm font-medium\">\n              Settings saved successfully\n              {lastSaved && (\n                <span className=\"font-normal\"> at {lastSaved.toLocaleTimeString()}</span>\n              )}\n            </span>\n          </div>\n        </div>\n      )}\n\n      {isLoading && (\n        <div className=\"bg-blue-50 border border-blue-200 text-blue-800 px-4 py-3 rounded-lg\">\n          <div className=\"flex items-center space-x-2\">\n            <RefreshCw className=\"h-4 w-4 animate-spin\" />\n            <span className=\"text-sm font-medium\">Loading settings...</span>\n          </div>\n        </div>\n      )}\n\n      {/* Application Settings */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-2\">\n            <Settings className=\"h-5 w-5 text-blue-600\" />\n            <CardTitle>Application Settings</CardTitle>\n          </div>\n          <CardDescription>\n            Basic application configuration and branding\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"appName\">Application Name</Label>\n              <Input\n                id=\"appName\"\n                value={settings.appName}\n                onChange={(e) => handleSettingChange('appName', e.target.value)}\n                disabled={!isSystemAdmin}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"appDescription\">Description</Label>\n              <Input\n                id=\"appDescription\"\n                value={settings.appDescription}\n                onChange={(e) => handleSettingChange('appDescription', e.target.value)}\n                disabled={!isSystemAdmin}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"maintenance\">Maintenance Mode</Label>\n              <p className=\"text-sm text-gray-600\">Temporarily disable access for maintenance</p>\n            </div>\n            <Switch\n              id=\"maintenance\"\n              checked={settings.maintenanceMode}\n              onCheckedChange={(checked) => handleSettingChange('maintenanceMode', checked)}\n              disabled={!isSystemAdmin}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"registration\">User Registration</Label>\n              <p className=\"text-sm text-gray-600\">Allow new users to register accounts</p>\n            </div>\n            <Switch\n              id=\"registration\"\n              checked={settings.registrationEnabled}\n              onCheckedChange={(checked) => handleSettingChange('registrationEnabled', checked)}\n              disabled={!isSystemAdmin}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Security Settings */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-2\">\n            <Shield className=\"h-5 w-5 text-green-600\" />\n            <CardTitle>Security Settings</CardTitle>\n          </div>\n          <CardDescription>\n            Authentication and security configuration\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"mfa\">Multi-Factor Authentication</Label>\n              <p className=\"text-sm text-gray-600\">Require MFA for all users</p>\n            </div>\n            <Switch\n              id=\"mfa\"\n              checked={settings.mfaRequired}\n              onCheckedChange={(checked) => handleSettingChange('mfaRequired', checked)}\n              disabled={!isSystemAdmin}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"passwordComplexity\">Password Complexity</Label>\n              <p className=\"text-sm text-gray-600\">Enforce strong password requirements</p>\n            </div>\n            <Switch\n              id=\"passwordComplexity\"\n              checked={settings.passwordComplexity}\n              onCheckedChange={(checked) => handleSettingChange('passwordComplexity', checked)}\n              disabled={!isSystemAdmin}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"sessionTimeout\">Session Timeout (seconds)</Label>\n            <Input\n              id=\"sessionTimeout\"\n              type=\"number\"\n              value={settings.sessionTimeout}\n              onChange={(e) => handleSettingChange('sessionTimeout', parseInt(e.target.value))}\n              disabled={!isSystemAdmin}\n              className=\"w-48\"\n            />\n            <p className=\"text-xs text-gray-500\">\n              Current: {Math.floor(settings.sessionTimeout / 60)} minutes\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Notification Settings */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-2\">\n            <Bell className=\"h-5 w-5 text-yellow-600\" />\n            <CardTitle>Notification Settings</CardTitle>\n          </div>\n          <CardDescription>\n            Configure system notifications and alerts\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"emailNotifs\">Email Notifications</Label>\n              <p className=\"text-sm text-gray-600\">Send notifications via email</p>\n            </div>\n            <Switch\n              id=\"emailNotifs\"\n              checked={settings.emailNotifications}\n              onCheckedChange={(checked) => handleSettingChange('emailNotifications', checked)}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"pushNotifs\">Push Notifications</Label>\n              <p className=\"text-sm text-gray-600\">Browser push notifications</p>\n            </div>\n            <Switch\n              id=\"pushNotifs\"\n              checked={settings.pushNotifications}\n              onCheckedChange={(checked) => handleSettingChange('pushNotifications', checked)}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-2\">\n            <div>\n              <Label htmlFor=\"systemAlerts\">System Alerts</Label>\n              <p className=\"text-sm text-gray-600\">Critical system notifications</p>\n            </div>\n            <Switch\n              id=\"systemAlerts\"\n              checked={settings.systemAlerts}\n              onCheckedChange={(checked) => handleSettingChange('systemAlerts', checked)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Theme & Localization */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-2\">\n            <Palette className=\"h-5 w-5 text-purple-600\" />\n            <CardTitle>Appearance & Localization</CardTitle>\n          </div>\n          <CardDescription>\n            Theme, language, and regional settings\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"locale\">Default Language</Label>\n              <select \n                id=\"locale\"\n                className=\"w-full p-2 border border-gray-300 rounded-md\"\n                value={settings.defaultLocale}\n                onChange={(e) => handleSettingChange('defaultLocale', e.target.value)}\n              >\n                <option value=\"en-US\">English (US)</option>\n                <option value=\"en-GB\">English (UK)</option>\n                <option value=\"es-ES\">Spanish</option>\n                <option value=\"fr-FR\">French</option>\n                <option value=\"de-DE\">German</option>\n              </select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"timezone\">Default Timezone</Label>\n              <select \n                id=\"timezone\"\n                className=\"w-full p-2 border border-gray-300 rounded-md\"\n                value={settings.timezone}\n                onChange={(e) => handleSettingChange('timezone', e.target.value)}\n              >\n                <option value=\"America/New_York\">Eastern Time</option>\n                <option value=\"America/Chicago\">Central Time</option>\n                <option value=\"America/Denver\">Mountain Time</option>\n                <option value=\"America/Los_Angeles\">Pacific Time</option>\n                <option value=\"Europe/London\">GMT</option>\n                <option value=\"Europe/Paris\">CET</option>\n              </select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* System Information */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-2\">\n            <Database className=\"h-5 w-5 text-gray-600\" />\n            <CardTitle>System Information</CardTitle>\n          </div>\n          <CardDescription>\n            Current system status and information\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Version:</span>\n                <Badge variant=\"outline\">v1.0.0</Badge>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Environment:</span>\n                <Badge variant=\"outline\" className=\"bg-green-50 text-green-700\">\n                  Development\n                </Badge>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Database:</span>\n                <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700\">\n                  Connected\n                </Badge>\n              </div>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Uptime:</span>\n                <span className=\"text-sm\">2d 14h 32m</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Last Backup:</span>\n                <span className=\"text-sm\">2 hours ago</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm font-medium\">Active Users:</span>\n                <span className=\"text-sm\">42</span>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {!isSystemAdmin && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Shield className=\"h-4 w-4 text-yellow-600\" />\n            <span className=\"text-sm font-medium text-yellow-800\">\n              Limited Access\n            </span>\n          </div>\n          <p className=\"text-sm text-yellow-700 mt-1\">\n            Some settings are restricted to Super Administrators. Contact your system administrator to modify system-wide settings.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}