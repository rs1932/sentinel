{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,8OAAC,wMAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/hooks/useDebounce.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,YAAe,KAAQ,EAAE,KAAa;IACpD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,WAAW;YACzB,kBAAkB;QACpB,GAAG;QAEH,OAAO;YACL,aAAa;QACf;IACF,GAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,8OAAC,qKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/UserDetailDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { \n  User as UserIcon,\n  Mail, \n  Calendar, \n  MapPin, \n  Building, \n  Shield,\n  Activity,\n  Edit\n} from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { apiClient } from '@/lib/api';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  attributes: {\n    department?: string;\n    location?: string;\n    role?: string;\n    [key: string]: any;\n  };\n  preferences: {\n    theme?: string;\n    language?: string;\n    notifications?: boolean;\n  };\n  is_active: boolean;\n  last_login?: string;\n  login_count: number;\n  failed_login_count?: number;\n  locked_until?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface UserDetailDialogProps {\n  user: User;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nexport function UserDetailDialog({ user, open, onOpenChange }: UserDetailDialogProps) {\n  const [userDetails, setUserDetails] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (open && user) {\n      loadUserDetails();\n    }\n  }, [open, user?.id]);\n\n  const loadUserDetails = async () => {\n    try {\n      setLoading(true);\n      const details = await apiClient.users.get(user.id);\n      setUserDetails(details);\n    } catch (error) {\n      console.error('Failed to load user details:', error);\n      setUserDetails(user); // Fallback to basic user data\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getInitials = (email: string, username?: string) => {\n    const name = username || email;\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleString();\n  };\n\n  const currentUser = userDetails || user;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2\">\n            <UserIcon className=\"h-5 w-5\" />\n            <span>User Details</span>\n          </DialogTitle>\n        </DialogHeader>\n\n        {loading ? (\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* User Header */}\n            <div className=\"flex items-start space-x-4\">\n              <Avatar className=\"h-16 w-16\">\n                <AvatarImage src={`/api/v1/users/${currentUser.id}/avatar`} />\n                <AvatarFallback className=\"text-lg\">\n                  {getInitials(currentUser.email, currentUser.username)}\n                </AvatarFallback>\n              </Avatar>\n              \n              <div className=\"flex-1 space-y-2\">\n                <div>\n                  <h3 className=\"text-xl font-semibold\">\n                    {currentUser.username || currentUser.email}\n                  </h3>\n                  {currentUser.username && (\n                    <p className=\"text-sm text-muted-foreground\">{currentUser.email}</p>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Badge \n                    variant={currentUser.is_active ? 'default' : 'secondary'}\n                    className={currentUser.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}\n                  >\n                    {currentUser.is_active ? 'Active' : 'Inactive'}\n                  </Badge>\n                  \n                  {currentUser.locked_until && new Date(currentUser.locked_until) > new Date() && (\n                    <Badge variant=\"destructive\">\n                      Locked until {formatDate(currentUser.locked_until)}\n                    </Badge>\n                  )}\n                </div>\n              </div>\n\n              <Button variant=\"outline\" size=\"sm\">\n                <Edit className=\"h-4 w-4 mr-2\" />\n                Edit\n              </Button>\n            </div>\n\n            <Separator />\n\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium flex items-center space-x-2\">\n                <Mail className=\"h-4 w-4\" />\n                <span>Contact Information</span>\n              </h4>\n              \n              <div className=\"grid grid-cols-1 gap-3 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Email</span>\n                  <span>{currentUser.email}</span>\n                </div>\n                {currentUser.username && (\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-muted-foreground\">Username</span>\n                    <span>{currentUser.username}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Attributes */}\n            {Object.keys(currentUser.attributes || {}).length > 0 && (\n              <>\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-sm font-medium flex items-center space-x-2\">\n                    <Building className=\"h-4 w-4\" />\n                    <span>Attributes</span>\n                  </h4>\n                  \n                  <div className=\"grid grid-cols-1 gap-3 text-sm\">\n                    {currentUser.attributes.department && (\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground\">Department</span>\n                        <span>{currentUser.attributes.department}</span>\n                      </div>\n                    )}\n                    {currentUser.attributes.location && (\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground\">Location</span>\n                        <span>{currentUser.attributes.location}</span>\n                      </div>\n                    )}\n                    {currentUser.attributes.role && (\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground\">Role/Title</span>\n                        <span>{currentUser.attributes.role}</span>\n                      </div>\n                    )}\n                    {Object.entries(currentUser.attributes).filter(([key]) => \n                      !['department', 'location', 'role'].includes(key)\n                    ).map(([key, value]) => (\n                      <div key={key} className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground capitalize\">\n                          {key.replace(/[_-]/g, ' ')}\n                        </span>\n                        <span>{String(value)}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <Separator />\n              </>\n            )}\n\n            {/* Preferences */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium flex items-center space-x-2\">\n                <Shield className=\"h-4 w-4\" />\n                <span>Preferences</span>\n              </h4>\n              \n              <div className=\"grid grid-cols-1 gap-3 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Theme</span>\n                  <span className=\"capitalize\">{currentUser.preferences?.theme || 'System'}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Language</span>\n                  <span className=\"uppercase\">{currentUser.preferences?.language || 'EN'}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Notifications</span>\n                  <Badge variant={currentUser.preferences?.notifications ? 'default' : 'secondary'}>\n                    {currentUser.preferences?.notifications ? 'Enabled' : 'Disabled'}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Activity Stats */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium flex items-center space-x-2\">\n                <Activity className=\"h-4 w-4\" />\n                <span>Activity</span>\n              </h4>\n              \n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"space-y-1\">\n                  <p className=\"text-muted-foreground\">Total Logins</p>\n                  <p className=\"text-2xl font-semibold\">{currentUser.login_count.toLocaleString()}</p>\n                </div>\n                {currentUser.failed_login_count !== undefined && (\n                  <div className=\"space-y-1\">\n                    <p className=\"text-muted-foreground\">Failed Logins</p>\n                    <p className=\"text-2xl font-semibold text-red-600\">{currentUser.failed_login_count}</p>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"grid grid-cols-1 gap-3 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Last Login</span>\n                  <span>{formatDate(currentUser.last_login)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Created</span>\n                  <span>{formatDate(currentUser.created_at)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Last Updated</span>\n                  <span>{formatDate(currentUser.updated_at)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1485, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AAUA;AACA;AAhBA;;;;;;;AAkBA,MAAM,OAAO,8JAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,qMAAA,CAAA,gBAAmB,CAC1C,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,8JAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,qMAAA,CAAA,aAAgB,CAAC;IACtC,MAAM,cAAc,qMAAA,CAAA,aAAgB,CAAC;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IACvC,MAAM,YAAY,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAAE,MAAM,aAAa,IAAI;IAAC;IACzD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,qMAAA,CAAA,gBAAmB,CACzC,CAAC;AAGH,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,MAAM,KAAK,qMAAA,CAAA,QAAW;IAEtB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAC3B,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OAC8C;IACjD,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,aAAU;QACV,cAAY,CAAC,CAAC;QACd,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACpD,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,GAAG,OAA0C;IAClE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,gKAAA,CAAA,OAAI;QACH,aAAU;QACV,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAkC;IACzE,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAkC;IACrE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM,MAAM,QAAQ;IAElE,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1661, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,8OAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1724, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/EditUserDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2, Save } from 'lucide-react';\nimport { apiClient } from '@/lib/api';\n\nconst editUserSchema = z.object({\n  username: z\n    .string()\n    .optional()\n    .refine(val => !val || val.length >= 3, {\n      message: 'Username must be at least 3 characters if provided'\n    }),\n  attributes: z.object({\n    department: z.string().optional(),\n    location: z.string().optional(),\n    role: z.string().optional(),\n  }),\n  preferences: z.object({\n    theme: z.enum(['light', 'dark', 'system']),\n    language: z.enum(['en', 'es', 'fr']),\n    notifications: z.boolean(),\n  }),\n  is_active: z.boolean(),\n});\n\ntype EditUserFormData = z.infer<typeof editUserSchema>;\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  attributes: {\n    department?: string;\n    location?: string;\n    role?: string;\n    [key: string]: any;\n  };\n  preferences: {\n    theme?: string;\n    language?: string;\n    notifications?: boolean;\n  };\n  is_active: boolean;\n}\n\ninterface EditUserDialogProps {\n  user: User;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\nexport function EditUserDialog({ user, open, onOpenChange, onSuccess }: EditUserDialogProps) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const form = useForm<EditUserFormData>({\n    resolver: zodResolver(editUserSchema),\n    defaultValues: {\n      username: user.username || '',\n      attributes: {\n        department: user.attributes?.department || '',\n        location: user.attributes?.location || '',\n        role: user.attributes?.role || '',\n      },\n      preferences: {\n        theme: (user.preferences?.theme as any) || 'system',\n        language: (user.preferences?.language as any) || 'en',\n        notifications: user.preferences?.notifications ?? true,\n      },\n      is_active: user.is_active,\n    },\n  });\n\n  const onSubmit = async (data: EditUserFormData) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Prepare the data according to API format\n      const userData = {\n        ...(data.username && { username: data.username }),\n        attributes: Object.fromEntries(\n          Object.entries(data.attributes).filter(([_, value]) => value)\n        ),\n        preferences: data.preferences,\n        is_active: data.is_active,\n      };\n\n      await apiClient.users.update(user.id, userData);\n      \n      onSuccess?.();\n      onOpenChange(false);\n    } catch (err: any) {\n      console.error('Update user error:', err);\n      setError(err.message || 'Failed to update user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    form.reset();\n    setError(null);\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={handleClose}>\n      <DialogContent className=\"sm:max-w-[500px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Edit User</DialogTitle>\n          <DialogDescription>\n            Update user information and preferences for {user.email}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {error && (\n              <Alert variant=\"destructive\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium\">Basic Information</h4>\n              \n              <div className=\"p-3 bg-muted rounded-md text-sm\">\n                <span className=\"text-muted-foreground\">Email: </span>\n                <span className=\"font-medium\">{user.email}</span>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Email cannot be changed after creation\n                </p>\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"username\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Username</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"john_doe (optional)\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Display name for the user\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Attributes */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium\">User Attributes</h4>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"attributes.department\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Department</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Engineering\" {...field} />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"attributes.location\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Location</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"San Francisco\" {...field} />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"attributes.role\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Role/Title</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Senior Engineer\" {...field} />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Preferences */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium\">Preferences</h4>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"preferences.theme\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Theme</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"light\">Light</SelectItem>\n                          <SelectItem value=\"dark\">Dark</SelectItem>\n                          <SelectItem value=\"system\">System</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"preferences.language\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Language</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"en\">English</SelectItem>\n                          <SelectItem value=\"es\">Spanish</SelectItem>\n                          <SelectItem value=\"fr\">French</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"preferences.notifications\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>\n                        Enable notifications\n                      </FormLabel>\n                      <FormDescription>\n                        Receive email notifications for important updates\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Status */}\n            <FormField\n              control={form.control}\n              name=\"is_active\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel>\n                      Active user\n                    </FormLabel>\n                    <FormDescription>\n                      User can sign in and access the system\n                    </FormDescription>\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <DialogFooter>\n              <Button type=\"button\" variant=\"outline\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={loading}>\n                {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                <Save className=\"mr-2 h-4 w-4\" />\n                Update User\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2485, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,2KAAA,CAAA,OAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,8OAAC,2KAAA,CAAA,UAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,2KAAA,CAAA,QAA0B;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2643, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/DeleteUserDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { AlertTriangle, Loader2, Trash2 } from 'lucide-react';\nimport { apiClient } from '@/lib/api';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  is_active: boolean;\n  login_count: number;\n  last_login?: string;\n  created_at: string;\n}\n\ninterface DeleteUserDialogProps {\n  user: User;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\nexport function DeleteUserDialog({ user, open, onOpenChange, onSuccess }: DeleteUserDialogProps) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [hardDelete, setHardDelete] = useState(false);\n\n  const handleDelete = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      await apiClient.users.delete(user.id, hardDelete);\n      \n      onSuccess?.();\n      onOpenChange(false);\n    } catch (err: any) {\n      console.error('Delete user error:', err);\n      setError(err.message || 'Failed to delete user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    setError(null);\n    setHardDelete(false);\n    onOpenChange(false);\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const isRecentUser = () => {\n    const createdDate = new Date(user.created_at);\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    return createdDate > thirtyDaysAgo;\n  };\n\n  const hasActivity = user.login_count > 0;\n\n  return (\n    <AlertDialog open={open} onOpenChange={handleClose}>\n      <AlertDialogContent className=\"sm:max-w-[500px]\">\n        <AlertDialogHeader>\n          <AlertDialogTitle className=\"flex items-center space-x-2\">\n            <Trash2 className=\"h-5 w-5 text-red-600\" />\n            <span>Delete User</span>\n          </AlertDialogTitle>\n          <AlertDialogDescription className=\"space-y-4\">\n            <p>\n              Are you sure you want to delete <strong>{user.username || user.email}</strong>?\n            </p>\n\n            {/* User Info */}\n            <div className=\"bg-muted p-4 rounded-md space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Email:</span>\n                <span>{user.email}</span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Status:</span>\n                <Badge variant={user.is_active ? 'default' : 'secondary'}>\n                  {user.is_active ? 'Active' : 'Inactive'}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Total Logins:</span>\n                <span>{user.login_count.toLocaleString()}</span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Last Login:</span>\n                <span>{formatDate(user.last_login)}</span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Created:</span>\n                <span>{formatDate(user.created_at)}</span>\n              </div>\n            </div>\n\n            {/* Warnings */}\n            {(hasActivity || isRecentUser()) && (\n              <div className=\"space-y-2\">\n                {hasActivity && (\n                  <Alert>\n                    <AlertTriangle className=\"h-4 w-4\" />\n                    <AlertDescription className=\"text-sm\">\n                      This user has logged in {user.login_count} times. \n                      {user.last_login && ` Last active on ${formatDate(user.last_login)}.`}\n                    </AlertDescription>\n                  </Alert>\n                )}\n                \n                {isRecentUser() && (\n                  <Alert>\n                    <AlertTriangle className=\"h-4 w-4\" />\n                    <AlertDescription className=\"text-sm\">\n                      This is a recently created user. Consider deactivating instead of deleting.\n                    </AlertDescription>\n                  </Alert>\n                )}\n              </div>\n            )}\n\n            {/* Delete Options */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox\n                  id=\"hard-delete\"\n                  checked={hardDelete}\n                  onCheckedChange={setHardDelete}\n                />\n                <div className=\"space-y-1\">\n                  <label\n                    htmlFor=\"hard-delete\"\n                    className=\"text-sm font-medium cursor-pointer\"\n                  >\n                    Permanent deletion (hard delete)\n                  </label>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {hardDelete \n                      ? 'User will be completely removed from the database. This cannot be undone.'\n                      : 'User will be soft deleted and can be restored later if needed.'\n                    }\n                  </p>\n                </div>\n              </div>\n\n              {hardDelete && (\n                <Alert variant=\"destructive\">\n                  <AlertTriangle className=\"h-4 w-4\" />\n                  <AlertDescription className=\"text-sm\">\n                    <strong>Warning:</strong> Hard deletion is permanent and irreversible. \n                    The user's data will be completely removed from the system.\n                  </AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            {error && (\n              <Alert variant=\"destructive\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        \n        <AlertDialogFooter>\n          <AlertDialogCancel onClick={handleClose}>\n            Cancel\n          </AlertDialogCancel>\n          <AlertDialogAction\n            onClick={handleDelete}\n            disabled={loading}\n            className=\"bg-red-600 hover:bg-red-700\"\n          >\n            {loading ? (\n              <div className=\"flex items-center space-x-2\">\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n                <span>Deleting...</span>\n              </div>\n            ) : (\n              <>\n                <Trash2 className=\"h-4 w-4 mr-2\" />\n                {hardDelete ? 'Delete Permanently' : 'Delete User'}\n              </>\n            )}\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3128, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/BulkActionsBar.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { \n  Users, \n  UserCheck, \n  UserX, \n  Trash2, \n  Shield, \n  ShieldOff,\n  X,\n  AlertTriangle\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  is_active: boolean;\n}\n\ninterface BulkActionsBarProps {\n  selectedCount: number;\n  selectedUsers: User[];\n  onBulkAction: (action: string, userIds: string[]) => Promise<void>;\n  onClearSelection: () => void;\n}\n\ninterface BulkAction {\n  value: string;\n  label: string;\n  icon: React.ComponentType<{ className?: string }>;\n  variant: 'default' | 'destructive' | 'secondary';\n  requiresConfirmation: boolean;\n  description: string;\n}\n\nconst bulkActions: BulkAction[] = [\n  {\n    value: 'activate',\n    label: 'Activate Users',\n    icon: UserCheck,\n    variant: 'default',\n    requiresConfirmation: true,\n    description: 'Allow selected users to sign in and access the system'\n  },\n  {\n    value: 'deactivate',\n    label: 'Deactivate Users', \n    icon: UserX,\n    variant: 'secondary',\n    requiresConfirmation: true,\n    description: 'Prevent selected users from signing in (they can be reactivated later)'\n  },\n  {\n    value: 'delete',\n    label: 'Delete Users',\n    icon: Trash2,\n    variant: 'destructive',\n    requiresConfirmation: true,\n    description: 'Permanently remove selected users from the system (this cannot be undone)'\n  }\n];\n\nexport function BulkActionsBar({ \n  selectedCount, \n  selectedUsers, \n  onBulkAction, \n  onClearSelection \n}: BulkActionsBarProps) {\n  const [selectedAction, setSelectedAction] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const currentAction = bulkActions.find(action => action.value === selectedAction);\n\n  const handleActionSelect = (actionValue: string) => {\n    setSelectedAction(actionValue);\n    const action = bulkActions.find(a => a.value === actionValue);\n    if (action?.requiresConfirmation) {\n      setShowConfirmation(true);\n    } else {\n      executeAction(actionValue);\n    }\n  };\n\n  const executeAction = async (actionValue: string) => {\n    try {\n      setLoading(true);\n      const userIds = selectedUsers.map(user => user.id);\n      await onBulkAction(actionValue, userIds);\n    } catch (error) {\n      console.error('Bulk action failed:', error);\n    } finally {\n      setLoading(false);\n      setSelectedAction('');\n      setShowConfirmation(false);\n    }\n  };\n\n  const getActionStats = () => {\n    if (!currentAction || !selectedUsers.length) return null;\n\n    const stats = {\n      active: selectedUsers.filter(u => u.is_active).length,\n      inactive: selectedUsers.filter(u => !u.is_active).length\n    };\n\n    return stats;\n  };\n\n  const stats = getActionStats();\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg border border-blue-200 bg-blue-50\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Users className=\"h-4 w-4 text-blue-600\" />\n            <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n              {selectedCount} selected\n            </Badge>\n          </div>\n          \n          <div className=\"hidden sm:flex items-center space-x-1 text-sm text-muted-foreground\">\n            {stats && (\n              <>\n                <span className=\"flex items-center space-x-1\">\n                  <UserCheck className=\"h-3 w-3\" />\n                  <span>{stats.active} active</span>\n                </span>\n                <span className=\"mx-2\">•</span>\n                <span className=\"flex items-center space-x-1\">\n                  <UserX className=\"h-3 w-3\" />\n                  <span>{stats.inactive} inactive</span>\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Select value={selectedAction} onValueChange={handleActionSelect}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Choose action...\" />\n            </SelectTrigger>\n            <SelectContent>\n              {bulkActions.map(action => {\n                const Icon = action.icon;\n                return (\n                  <SelectItem key={action.value} value={action.value}>\n                    <div className=\"flex items-center space-x-2\">\n                      <Icon className=\"h-4 w-4\" />\n                      <span>{action.label}</span>\n                    </div>\n                  </SelectItem>\n                );\n              })}\n            </SelectContent>\n          </Select>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onClearSelection}\n            className=\"flex items-center space-x-1\"\n          >\n            <X className=\"h-3 w-3\" />\n            <span className=\"hidden sm:inline\">Clear</span>\n          </Button>\n        </div>\n      </div>\n\n      {/* Confirmation Dialog */}\n      <AlertDialog open={showConfirmation} onOpenChange={setShowConfirmation}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              {currentAction && (\n                <>\n                  <currentAction.icon className=\"h-5 w-5\" />\n                  <span>Confirm {currentAction.label}</span>\n                </>\n              )}\n            </AlertDialogTitle>\n            <AlertDialogDescription className=\"space-y-3\">\n              <p>{currentAction?.description}</p>\n              \n              <div className=\"bg-muted p-3 rounded-md\">\n                <p className=\"font-medium text-sm mb-2\">This action will affect:</p>\n                <div className=\"space-y-1\">\n                  {selectedUsers.slice(0, 5).map(user => (\n                    <div key={user.id} className=\"text-xs flex items-center space-x-2\">\n                      <span className=\"truncate\">{user.username || user.email}</span>\n                      <Badge \n                        variant=\"outline\" \n                        className={`text-xs ${user.is_active ? 'border-green-500 text-green-700' : 'border-gray-500 text-gray-700'}`}\n                      >\n                        {user.is_active ? 'Active' : 'Inactive'}\n                      </Badge>\n                    </div>\n                  ))}\n                  {selectedUsers.length > 5 && (\n                    <div className=\"text-xs text-muted-foreground\">\n                      + {selectedUsers.length - 5} more users\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {currentAction?.variant === 'destructive' && (\n                <div className=\"flex items-start space-x-2 p-3 bg-red-50 border border-red-200 rounded-md\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-600 mt-0.5\" />\n                  <div className=\"text-sm text-red-800\">\n                    <p className=\"font-medium\">This action cannot be undone</p>\n                    <p>Users will be permanently removed from the system.</p>\n                  </div>\n                </div>\n              )}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={() => executeAction(selectedAction)}\n              disabled={loading}\n              className={currentAction?.variant === 'destructive' ? 'bg-red-600 hover:bg-red-700' : ''}\n            >\n              {loading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"h-3 w-3 animate-spin rounded-full border border-current border-t-transparent\" />\n                  <span>Processing...</span>\n                </div>\n              ) : (\n                `Yes, ${currentAction?.label}`\n              )}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3657, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/BulkOperationsProvider.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\nimport { toast } from '@/hooks/use-toast';\nimport { apiClient } from '@/lib/api';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  is_active: boolean;\n}\n\ninterface BulkOperationsContextType {\n  selectedUsers: User[];\n  isSelecting: boolean;\n  selectUser: (user: User) => void;\n  deselectUser: (userId: string) => void;\n  selectAll: (users: User[]) => void;\n  clearSelection: () => void;\n  toggleSelecting: () => void;\n  performBulkAction: (action: string, userIds: string[]) => Promise<void>;\n}\n\nconst BulkOperationsContext = createContext<BulkOperationsContextType | undefined>(undefined);\n\nexport function useBulkOperations() {\n  const context = useContext(BulkOperationsContext);\n  if (!context) {\n    throw new Error('useBulkOperations must be used within a BulkOperationsProvider');\n  }\n  return context;\n}\n\ninterface BulkOperationsProviderProps {\n  children: ReactNode;\n  onRefresh?: () => void;\n}\n\nexport function BulkOperationsProvider({ children, onRefresh }: BulkOperationsProviderProps) {\n  const [selectedUsers, setSelectedUsers] = useState<User[]>([]);\n  const [isSelecting, setIsSelecting] = useState(false);\n\n  const selectUser = useCallback((user: User) => {\n    setSelectedUsers(prev => {\n      const exists = prev.find(u => u.id === user.id);\n      if (exists) {\n        return prev; // Already selected\n      }\n      return [...prev, user];\n    });\n  }, []);\n\n  const deselectUser = useCallback((userId: string) => {\n    setSelectedUsers(prev => prev.filter(u => u.id !== userId));\n  }, []);\n\n  const selectAll = useCallback((users: User[]) => {\n    setSelectedUsers(users);\n  }, []);\n\n  const clearSelection = useCallback(() => {\n    setSelectedUsers([]);\n    setIsSelecting(false);\n  }, []);\n\n  const toggleSelecting = useCallback(() => {\n    setIsSelecting(prev => !prev);\n    if (isSelecting) {\n      setSelectedUsers([]);\n    }\n  }, [isSelecting]);\n\n  const performBulkAction = useCallback(async (action: string, userIds: string[]) => {\n    try {\n      let endpoint = '';\n      let method = 'POST';\n      let body: any = { user_ids: userIds };\n\n      switch (action) {\n        case 'activate':\n          endpoint = '/users/bulk/activate';\n          break;\n        case 'deactivate':\n          endpoint = '/users/bulk/deactivate';\n          break;\n        case 'delete':\n          endpoint = '/users/bulk/delete';\n          method = 'DELETE';\n          break;\n        default:\n          throw new Error(`Unknown bulk action: ${action}`);\n      }\n\n      const response = await apiClient.request(endpoint, {\n        method,\n        body: JSON.stringify(body),\n      });\n\n      // Show success toast with details\n      const successCount = response.successful || response.success_count || userIds.length;\n      const failureCount = response.failed || response.failure_count || 0;\n      \n      let message = `${successCount} user${successCount !== 1 ? 's' : ''} ${action}d successfully`;\n      if (failureCount > 0) {\n        message += `, ${failureCount} failed`;\n      }\n\n      toast({\n        title: 'Bulk Operation Complete',\n        description: message,\n      });\n\n      // Clear selection and refresh\n      clearSelection();\n      onRefresh?.();\n\n      return response;\n    } catch (error: any) {\n      console.error('Bulk operation failed:', error);\n      \n      toast({\n        title: 'Bulk Operation Failed',\n        description: error.message || `Failed to ${action} users`,\n        variant: 'destructive',\n      });\n      \n      throw error;\n    }\n  }, [clearSelection, onRefresh]);\n\n  const contextValue: BulkOperationsContextType = {\n    selectedUsers,\n    isSelecting,\n    selectUser,\n    deselectUser,\n    selectAll,\n    clearSelection,\n    toggleSelecting,\n    performBulkAction,\n  };\n\n  return (\n    <BulkOperationsContext.Provider value={contextValue}>\n      {children}\n    </BulkOperationsContext.Provider>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3788, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/UserList.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { \n  Search, \n  Filter, \n  MoreHorizontal, \n  Users, \n  UserCheck, \n  UserX, \n  Eye,\n  Edit,\n  Trash2,\n  Shield,\n  ShieldCheck,\n  ChevronLeft,\n  ChevronRight,\n  Building\n} from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@/components/ui/dropdown-menu';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { apiClient } from '@/lib/api';\nimport { useDebounce } from '@/hooks/useDebounce';\nimport { useAuthStore } from '@/store/auth';\nimport { UserDetailDialog } from './UserDetailDialog';\nimport { EditUserDialog } from './EditUserDialog';\nimport { DeleteUserDialog } from './DeleteUserDialog';\nimport { BulkActionsBar } from './BulkActionsBar';\nimport { useBulkOperations } from './BulkOperationsProvider';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  attributes: {\n    department?: string;\n    location?: string;\n    [key: string]: any;\n  };\n  is_active: boolean;\n  last_login?: string;\n  login_count: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface UserListResponse {\n  items: User[];\n  total: number;\n  page: number;\n  limit: number;\n  pages: number;\n}\n\ninterface UserListProps {\n  onCountUpdate?: (count: number) => void;\n}\n\nexport function UserList({ onCountUpdate }: UserListProps = {}) {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  const { userRole } = useAuthStore();\n  const isSuperAdmin = userRole === 'super_admin';\n  \n  const {\n    selectedUsers,\n    isSelecting,\n    selectUser,\n    deselectUser,\n    selectAll,\n    clearSelection,\n    toggleSelecting,\n    performBulkAction,\n  } = useBulkOperations();\n  \n  // Filters and pagination\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [tenantFilter, setTenantFilter] = useState<string>('all');\n  const [sortBy, setSortBy] = useState('created_at');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(25);\n  const [pagination, setPagination] = useState({\n    total: 0,\n    pages: 0\n  });\n\n  // Tenant data for filtering\n  const [tenants, setTenants] = useState<any[]>([]);\n  const [loadingTenants, setLoadingTenants] = useState(false);\n\n  // Dialogs\n  const [showUserDetail, setShowUserDetail] = useState<User | null>(null);\n  const [showEditUser, setShowEditUser] = useState<User | null>(null);\n  const [showDeleteUser, setShowDeleteUser] = useState<User | null>(null);\n\n  const debouncedSearch = useDebounce(searchTerm, 300);\n\n  // Load tenants for super admin\n  useEffect(() => {\n    if (isSuperAdmin) {\n      loadTenants();\n    }\n  }, [isSuperAdmin]);\n\n  // Load users effect\n  useEffect(() => {\n    loadUsers();\n  }, [debouncedSearch, statusFilter, tenantFilter, sortBy, sortOrder, currentPage, pageSize]);\n\n  // Listen for refresh events\n  useEffect(() => {\n    const handleRefresh = () => loadUsers();\n    window.addEventListener('refreshUsers', handleRefresh);\n    return () => window.removeEventListener('refreshUsers', handleRefresh);\n  }, []);\n\n  const loadTenants = async () => {\n    try {\n      setLoadingTenants(true);\n      const response = await apiClient.tenants.list();\n      setTenants(response.items || []);\n    } catch (err: any) {\n      console.error('Failed to load tenants:', err);\n    } finally {\n      setLoadingTenants(false);\n    }\n  };\n\n  const loadUsers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const params: Record<string, any> = {\n        page: currentPage,\n        limit: pageSize,\n        sort: sortBy,\n        order: sortOrder\n      };\n\n      if (debouncedSearch) {\n        params.search = debouncedSearch;\n      }\n\n      if (statusFilter !== 'all') {\n        params.is_active = statusFilter === 'active';\n      }\n\n      if (isSuperAdmin && tenantFilter !== 'all') {\n        params.tenant_id = tenantFilter;\n        console.log('🔍 Filtering users by tenant:', tenantFilter);\n      }\n\n      console.log('📡 API request params:', params);\n      const response = await apiClient.users.list(params);\n      console.log('📥 API response:', { total: response.total, itemCount: response.items?.length });\n      \n      setUsers(response.items);\n      setPagination({\n        total: response.total,\n        pages: response.pages\n      });\n      \n      // Update parent component with user count\n      onCountUpdate?.(response.total);\n    } catch (err: any) {\n      setError(err.message || 'Failed to load users');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelectUser = (userId: string, checked: boolean) => {\n    const user = users.find(u => u.id === userId);\n    if (!user) return;\n    \n    if (checked) {\n      selectUser(user);\n    } else {\n      deselectUser(userId);\n    }\n  };\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      selectAll(users);\n    } else {\n      clearSelection();\n    }\n  };\n\n  const handleBulkAction = async (action: string, userIds: string[]) => {\n    await performBulkAction(action, userIds);\n    loadUsers(); // Refresh the user list\n  };\n\n  const formatLastLogin = (lastLogin?: string) => {\n    if (!lastLogin) return 'Never';\n    return new Date(lastLogin).toLocaleDateString();\n  };\n\n  const getInitials = (email: string, username?: string) => {\n    const name = username || email;\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  const selectedUsersData = useMemo(() => {\n    const selectedIds = new Set(selectedUsers.map(u => u.id));\n    return users.filter(user => selectedIds.has(user.id));\n  }, [users, selectedUsers]);\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 mb-2\">Error loading users</div>\n          <div className=\"text-sm text-muted-foreground\">{error}</div>\n          <Button onClick={loadUsers} className=\"mt-4\">Try Again</Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Filters and Search */}\n      <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\n        <div className=\"flex flex-1 items-center space-x-2\">\n          <div className=\"relative flex-1 max-w-sm\">\n            <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search users...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-9\"\n            />\n          </div>\n          \n          <Select value={statusFilter} onValueChange={setStatusFilter}>\n            <SelectTrigger className=\"w-[140px]\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Status</SelectItem>\n              <SelectItem value=\"active\">Active</SelectItem>\n              <SelectItem value=\"inactive\">Inactive</SelectItem>\n            </SelectContent>\n          </Select>\n\n          {/* Tenant filter - only show for super admin */}\n          {isSuperAdmin && (\n            <Select value={tenantFilter} onValueChange={setTenantFilter} disabled={loadingTenants}>\n              <SelectTrigger className=\"w-[180px]\">\n                <Building className=\"mr-2 h-4 w-4\" />\n                <SelectValue placeholder={loadingTenants ? \"Loading...\" : \"Select Tenant\"} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Tenants</SelectItem>\n                {tenants.map((tenant) => (\n                  <SelectItem key={tenant.id} value={tenant.id}>\n                    <div className=\"flex items-center gap-2\">\n                      <span>{tenant.name}</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {tenant.code}\n                      </Badge>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          )}\n\n          <Select value={`${sortBy}-${sortOrder}`} onValueChange={(value) => {\n            const [sort, order] = value.split('-');\n            setSortBy(sort);\n            setSortOrder(order as 'asc' | 'desc');\n          }}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"created_at-desc\">Newest First</SelectItem>\n              <SelectItem value=\"created_at-asc\">Oldest First</SelectItem>\n              <SelectItem value=\"email-asc\">Email A-Z</SelectItem>\n              <SelectItem value=\"email-desc\">Email Z-A</SelectItem>\n              <SelectItem value=\"last_login-desc\">Recent Login</SelectItem>\n              <SelectItem value=\"login_count-desc\">Most Active</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n          <Users className=\"h-4 w-4\" />\n          <span>\n            {pagination.total} users\n            {isSuperAdmin && tenantFilter !== 'all' && (\n              <>\n                {' '}in{' '}\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {tenants.find(t => t.id === tenantFilter)?.name || 'Selected Tenant'}\n                </Badge>\n              </>\n            )}\n            {isSuperAdmin && tenantFilter === 'all' && ' across all tenants'}\n          </span>\n        </div>\n      </div>\n\n      {/* Bulk Actions */}\n      {selectedUsers.length > 0 && (\n        <BulkActionsBar\n          selectedCount={selectedUsers.length}\n          selectedUsers={selectedUsers}\n          onBulkAction={handleBulkAction}\n          onClearSelection={clearSelection}\n        />\n      )}\n\n      {/* Users Table */}\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-12\">\n                <Checkbox\n                  checked={selectedUsers.length === users.length && users.length > 0}\n                  onCheckedChange={handleSelectAll}\n                />\n              </TableHead>\n              <TableHead>User</TableHead>\n              {isSuperAdmin && <TableHead>Tenant</TableHead>}\n              <TableHead>Department</TableHead>\n              <TableHead>Status</TableHead>\n              <TableHead>Last Login</TableHead>\n              <TableHead>Logins</TableHead>\n              <TableHead>Joined</TableHead>\n              <TableHead className=\"w-12\"></TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {loading ? (\n              Array.from({ length: 5 }).map((_, i) => (\n                <TableRow key={i}>\n                  <TableCell colSpan={isSuperAdmin ? 9 : 8}>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"h-8 w-8 rounded-full bg-muted animate-pulse\" />\n                      <div className=\"space-y-2\">\n                        <div className=\"h-4 w-48 bg-muted animate-pulse rounded\" />\n                        <div className=\"h-3 w-32 bg-muted animate-pulse rounded\" />\n                      </div>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : users.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={isSuperAdmin ? 9 : 8} className=\"text-center py-8\">\n                  <div className=\"flex flex-col items-center space-y-2\">\n                    <Users className=\"h-8 w-8 text-muted-foreground\" />\n                    <div className=\"font-medium\">No users found</div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {searchTerm || statusFilter !== 'all' || (isSuperAdmin && tenantFilter !== 'all')\n                        ? 'Try adjusting your search or filters'\n                        : 'Get started by creating your first user'\n                      }\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ) : (\n              users.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell>\n                    <Checkbox\n                      checked={selectedUsers.some(u => u.id === user.id)}\n                      onCheckedChange={(checked) => handleSelectUser(user.id, !!checked)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"h-8 w-8\">\n                        <AvatarImage src={`/api/v1/users/${user.id}/avatar`} />\n                        <AvatarFallback className=\"text-xs\">\n                          {getInitials(user.email, user.username)}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <div className=\"font-medium\">{user.username || user.email}</div>\n                        {user.username && (\n                          <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                        )}\n                      </div>\n                    </div>\n                  </TableCell>\n                  {isSuperAdmin && (\n                    <TableCell>\n                      <div className=\"flex items-center gap-2\">\n                        <Building className=\"h-3 w-3 text-muted-foreground\" />\n                        <div className=\"text-sm\">\n                          {user.tenant?.name || 'Unknown'}\n                        </div>\n                      </div>\n                      {user.tenant?.code && (\n                        <div className=\"text-xs text-muted-foreground\">\n                          {user.tenant.code}\n                        </div>\n                      )}\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      {user.attributes?.department || 'N/A'}\n                    </div>\n                    {user.attributes.location && (\n                      <div className=\"text-xs text-muted-foreground\">\n                        {user.attributes.location}\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Badge \n                      variant={user.is_active ? 'default' : 'secondary'}\n                      className={user.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}\n                    >\n                      {user.is_active ? (\n                        <>\n                          <UserCheck className=\"h-3 w-3 mr-1\" />\n                          Active\n                        </>\n                      ) : (\n                        <>\n                          <UserX className=\"h-3 w-3 mr-1\" />\n                          Inactive\n                        </>\n                      )}\n                    </Badge>\n                  </TableCell>\n                  <TableCell className=\"text-sm\">\n                    {formatLastLogin(user.last_login)}\n                  </TableCell>\n                  <TableCell className=\"text-sm\">\n                    {user.login_count.toLocaleString()}\n                  </TableCell>\n                  <TableCell className=\"text-sm\">\n                    {new Date(user.created_at).toLocaleDateString()}\n                  </TableCell>\n                  <TableCell>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onClick={() => setShowUserDetail(user)}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          View Details\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => setShowEditUser(user)}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Edit User\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        {user.is_active ? (\n                          <DropdownMenuItem>\n                            <Shield className=\"h-4 w-4 mr-2\" />\n                            Deactivate\n                          </DropdownMenuItem>\n                        ) : (\n                          <DropdownMenuItem>\n                            <ShieldCheck className=\"h-4 w-4 mr-2\" />\n                            Activate\n                          </DropdownMenuItem>\n                        )}\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem \n                          onClick={() => setShowDeleteUser(user)}\n                          className=\"text-red-600\"\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          Delete User\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Pagination */}\n      {pagination.pages > 1 && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <p className=\"text-sm text-muted-foreground\">\n              Showing {((currentPage - 1) * pageSize) + 1} to {Math.min(currentPage * pageSize, pagination.total)} of {pagination.total} users\n            </p>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <Select value={pageSize.toString()} onValueChange={(value) => {\n              setPageSize(Number(value));\n              setCurrentPage(1);\n            }}>\n              <SelectTrigger className=\"w-[70px]\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"10\">10</SelectItem>\n                <SelectItem value=\"25\">25</SelectItem>\n                <SelectItem value=\"50\">50</SelectItem>\n                <SelectItem value=\"100\">100</SelectItem>\n              </SelectContent>\n            </Select>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            \n            <span className=\"text-sm\">\n              Page {currentPage} of {pagination.pages}\n            </span>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(Math.min(pagination.pages, currentPage + 1))}\n              disabled={currentPage === pagination.pages}\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Dialogs */}\n      {showUserDetail && (\n        <UserDetailDialog\n          user={showUserDetail}\n          open={!!showUserDetail}\n          onOpenChange={() => setShowUserDetail(null)}\n        />\n      )}\n\n      {showEditUser && (\n        <EditUserDialog\n          user={showEditUser}\n          open={!!showEditUser}\n          onOpenChange={() => setShowEditUser(null)}\n          onSuccess={() => {\n            setShowEditUser(null);\n            loadUsers();\n          }}\n        />\n      )}\n\n      {showDeleteUser && (\n        <DeleteUserDialog\n          user={showDeleteUser}\n          open={!!showDeleteUser}\n          onOpenChange={() => setShowDeleteUser(null)}\n          onSuccess={() => {\n            setShowDeleteUser(null);\n            loadUsers();\n          }}\n        />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5093, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,kKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 5127, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/CreateUserDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useQuery } from '@tanstack/react-query';\nimport * as z from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { \n  Loader2, \n  Mail, \n  Send, \n  User, \n  Building2, \n  Settings2, \n  Info,\n  AlertCircle,\n  Eye,\n  EyeOff,\n  UserPlus,\n  Check,\n  Key,\n  Shield,\n  Bell\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api';\nimport { Tenant } from '@/types';\n\nconst createUserSchema = z.object({\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address'),\n  username: z\n    .string()\n    .optional()\n    .refine(val => !val || val.length >= 3, {\n      message: 'Username must be at least 3 characters if provided'\n    }),\n  password: z\n    .string()\n    .optional(),\n  tenant_id: z.string().optional(),\n  attributes: z.object({\n    department: z.string().optional(),\n    location: z.string().optional(),\n    role: z.string().optional(),\n  }),\n  preferences: z.object({\n    theme: z.enum(['light', 'dark', 'system']).default('system'),\n    language: z.enum(['en', 'es', 'fr']).default('en'),\n    notifications: z.boolean().default(true),\n  }),\n  is_active: z.boolean().default(true),\n  send_invitation: z.boolean().default(false),\n}).refine(data => data.send_invitation || (data.password && data.password.length >= 8), {\n  message: 'Password must be at least 8 characters if not sending invitation',\n  path: ['password']\n});\n\ntype CreateUserFormData = z.infer<typeof createUserSchema>;\n\ninterface CreateUserDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\nexport function CreateUserDialog({ open, onOpenChange, onSuccess }: CreateUserDialogProps) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState('basic');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showAdvancedPreferences, setShowAdvancedPreferences] = useState(false);\n\n  // Fetch available tenants for user assignment\n  const { data: tenants } = useQuery({\n    queryKey: ['tenants'],\n    queryFn: () => apiClient.tenants.list({ limit: 100 }),\n    enabled: open,\n  });\n\n  const form = useForm<CreateUserFormData>({\n    resolver: zodResolver(createUserSchema),\n    defaultValues: {\n      email: '',\n      username: '',\n      password: '',\n      tenant_id: '',\n      attributes: {\n        department: '',\n        location: '',\n        role: '',\n      },\n      preferences: {\n        theme: 'system',\n        language: 'en',\n        notifications: true,\n      },\n      is_active: true,\n      send_invitation: false,\n    },\n  });\n\n  const sendInvitation = form.watch('send_invitation');\n\n  const onSubmit = async (data: CreateUserFormData) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Prepare the data according to API format\n      const userData = {\n        email: data.email,\n        ...(data.username && { username: data.username }),\n        ...(!data.send_invitation && data.password && { password: data.password }),\n        ...(data.tenant_id && { tenant_id: data.tenant_id }),\n        attributes: Object.fromEntries(\n          Object.entries(data.attributes).filter(([_, value]) => value)\n        ),\n        preferences: data.preferences,\n        is_active: data.is_active,\n        send_invitation: data.send_invitation,\n      };\n\n      const response = await apiClient.users.create(userData);\n      console.log('User created:', response);\n      \n      onSuccess?.();\n      form.reset();\n      onOpenChange(false);\n    } catch (err: any) {\n      console.error('Create user error:', err);\n      setError(err.message || 'Failed to create user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    form.reset();\n    setError(null);\n    setActiveTab('basic');\n    setShowPassword(false);\n    setShowAdvancedPreferences(false);\n    onOpenChange(false);\n  };\n\n  const isFormValid = () => {\n    const values = form.getValues();\n    if (!values.email) return false;\n    if (!values.send_invitation && (!values.password || values.password.length < 8)) return false;\n    return true;\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-6xl h-[85vh] flex flex-col p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b\">\n          <DialogTitle className=\"text-xl font-semibold flex items-center gap-2\">\n            <UserPlus className=\"h-5 w-5 text-blue-600\" />\n            Create New User\n          </DialogTitle>\n          <DialogDescription>\n            Add a new user to your organization. They will receive access based on their assigned roles and permissions.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex-1 overflow-hidden flex flex-col\">\n            {error && (\n              <div className=\"px-6 pt-2\">\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertTitle>Error</AlertTitle>\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              </div>\n            )}\n\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1 flex flex-col\">\n              <TabsList className=\"grid w-full grid-cols-4 mx-8 mt-4 h-12\" style={{ width: 'calc(100% - 4rem)' }}>\n                <TabsTrigger value=\"basic\" className=\"flex items-center gap-2\">\n                  <User className=\"h-4 w-4\" />\n                  <span className=\"hidden sm:inline\">Basic Info</span>\n                  <span className=\"sm:hidden\">Basic</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"access\" className=\"flex items-center gap-2\">\n                  <Key className=\"h-4 w-4\" />\n                  <span className=\"hidden sm:inline\">Access & Security</span>\n                  <span className=\"sm:hidden\">Access</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"organization\" className=\"flex items-center gap-2\">\n                  <Building2 className=\"h-4 w-4\" />\n                  <span className=\"hidden sm:inline\">Organization</span>\n                  <span className=\"sm:hidden\">Org</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"preferences\" className=\"flex items-center gap-2\">\n                  <Settings2 className=\"h-4 w-4\" />\n                  Preferences\n                </TabsTrigger>\n              </TabsList>\n\n              <div className=\"flex-1 overflow-y-auto px-8 py-6\">\n                {/* Basic Information Tab */}\n                <TabsContent value=\"basic\" className=\"mt-0 space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>User Details</CardTitle>\n                      <CardDescription>\n                        Enter the essential information for the new user account\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email Address *</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"email\"\n                                placeholder=\"user@example.com\"\n                                className=\"text-base\"\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormDescription>\n                              This will be the user's login email and primary contact\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"username\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Display Name</FormLabel>\n                            <FormControl>\n                              <Input\n                                placeholder=\"john_doe (optional)\"\n                                className=\"text-base\"\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormDescription>\n                              Optional display name that will appear in the interface\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <Separator />\n\n                      <FormField\n                        control={form.control}\n                        name=\"is_active\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                            <div className=\"space-y-0.5\">\n                              <FormLabel className=\"text-base\">\n                                Active User Account\n                              </FormLabel>\n                              <FormDescription>\n                                User can sign in and access the system immediately\n                              </FormDescription>\n                            </div>\n                            <FormControl>\n                              <Switch\n                                checked={field.value}\n                                onCheckedChange={field.onChange}\n                              />\n                            </FormControl>\n                          </FormItem>\n                        )}\n                      />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                {/* Access & Security Tab */}\n                <TabsContent value=\"access\" className=\"mt-0 space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Authentication Method</CardTitle>\n                      <CardDescription>\n                        Choose how the user will set up their initial access\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"send_invitation\"\n                        render={({ field }) => (\n                          <div className=\"grid gap-4\">\n                            <Card className={`cursor-pointer transition-all ${\n                              field.value ? 'ring-2 ring-blue-500 bg-blue-50/50' : 'hover:bg-gray-50'\n                            }`} onClick={() => field.onChange(true)}>\n                              <CardHeader className=\"pb-3\">\n                                <div className=\"flex items-start gap-3\">\n                                  <Checkbox\n                                    checked={field.value}\n                                    onCheckedChange={(checked) => field.onChange(checked)}\n                                    onClick={(e) => e.stopPropagation()}\n                                    className=\"mt-1\"\n                                  />\n                                  <div className=\"flex-1\">\n                                    <div className=\"flex items-center gap-2 mb-1\">\n                                      <Mail className=\"h-4 w-4 text-blue-600\" />\n                                      <span className=\"font-medium\">Send Invitation Email</span>\n                                      <Badge variant=\"secondary\" className=\"text-xs\">Recommended</Badge>\n                                    </div>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      User receives a secure email invitation to set their own password. More secure and user-friendly.\n                                    </p>\n                                  </div>\n                                </div>\n                              </CardHeader>\n                            </Card>\n\n                            <Card className={`cursor-pointer transition-all ${\n                              !field.value ? 'ring-2 ring-blue-500 bg-blue-50/50' : 'hover:bg-gray-50'\n                            }`} onClick={() => field.onChange(false)}>\n                              <CardHeader className=\"pb-3\">\n                                <div className=\"flex items-start gap-3\">\n                                  <Checkbox\n                                    checked={!field.value}\n                                    onCheckedChange={(checked) => field.onChange(!checked)}\n                                    onClick={(e) => e.stopPropagation()}\n                                    className=\"mt-1\"\n                                  />\n                                  <div className=\"flex-1\">\n                                    <div className=\"flex items-center gap-2 mb-1\">\n                                      <Key className=\"h-4 w-4 text-purple-600\" />\n                                      <span className=\"font-medium\">Set Password Now</span>\n                                    </div>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      Create a password for the user immediately. You'll need to share it with them securely.\n                                    </p>\n                                  </div>\n                                </div>\n                              </CardHeader>\n                            </Card>\n                          </div>\n                        )}\n                      />\n\n                      {!sendInvitation && (\n                        <div className=\"space-y-4 pt-4\">\n                          <Separator />\n                          <FormField\n                            control={form.control}\n                            name=\"password\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Password *</FormLabel>\n                                <FormControl>\n                                  <div className=\"relative\">\n                                    <Input\n                                      type={showPassword ? \"text\" : \"password\"}\n                                      placeholder=\"Minimum 8 characters\"\n                                      className=\"text-base pr-10\"\n                                      {...field}\n                                    />\n                                    <Button\n                                      type=\"button\"\n                                      variant=\"ghost\"\n                                      size=\"sm\"\n                                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                                      onClick={() => setShowPassword(!showPassword)}\n                                    >\n                                      {showPassword ? (\n                                        <EyeOff className=\"h-4 w-4\" />\n                                      ) : (\n                                        <Eye className=\"h-4 w-4\" />\n                                      )}\n                                    </Button>\n                                  </div>\n                                </FormControl>\n                                <FormDescription>\n                                  Password must be at least 8 characters long and contain a mix of letters, numbers, and symbols\n                                </FormDescription>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                {/* Organization Tab */}\n                <TabsContent value=\"organization\" className=\"mt-0 space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Organization Assignment</CardTitle>\n                      <CardDescription>\n                        Assign the user to a specific organization and department\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"tenant_id\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Organization</FormLabel>\n                            <Select onValueChange={field.onChange} value={field.value}>\n                              <FormControl>\n                                <SelectTrigger className=\"text-base\">\n                                  <SelectValue placeholder=\"Select an organization\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                {tenants?.items.map((tenant: Tenant) => (\n                                  <SelectItem key={tenant.id} value={tenant.id}>\n                                    <div className=\"flex items-center gap-2\">\n                                      <Building2 className=\"h-4 w-4\" />\n                                      <span>{tenant.name}</span>\n                                      <Badge variant=\"outline\" className=\"text-xs\">{tenant.code}</Badge>\n                                    </div>\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                            <FormDescription>\n                              The organization this user will belong to and have access to\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <Separator />\n\n                      <div className=\"space-y-4\">\n                        <h4 className=\"font-medium\">Department & Role Information</h4>\n                        \n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <FormField\n                            control={form.control}\n                            name=\"attributes.department\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Department</FormLabel>\n                                <FormControl>\n                                  <Input \n                                    placeholder=\"e.g., Engineering\" \n                                    className=\"text-base\"\n                                    {...field} \n                                  />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          <FormField\n                            control={form.control}\n                            name=\"attributes.location\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Location</FormLabel>\n                                <FormControl>\n                                  <Input \n                                    placeholder=\"e.g., San Francisco\" \n                                    className=\"text-base\"\n                                    {...field} \n                                  />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                        </div>\n\n                        <FormField\n                          control={form.control}\n                          name=\"attributes.role\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Job Title</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"e.g., Senior Software Engineer\" \n                                  className=\"text-base\"\n                                  {...field} \n                                />\n                              </FormControl>\n                              <FormDescription>\n                                The user's role or position within the organization\n                              </FormDescription>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                {/* Preferences Tab */}\n                <TabsContent value=\"preferences\" className=\"mt-0 space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Default Preferences</CardTitle>\n                      <CardDescription>\n                        Set the user's initial preferences. They can change these later in their profile.\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name=\"preferences.theme\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Theme Preference</FormLabel>\n                              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                <FormControl>\n                                  <SelectTrigger className=\"text-base\">\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  <SelectItem value=\"light\">Light Mode</SelectItem>\n                                  <SelectItem value=\"dark\">Dark Mode</SelectItem>\n                                  <SelectItem value=\"system\">System Default</SelectItem>\n                                </SelectContent>\n                              </Select>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name=\"preferences.language\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Language</FormLabel>\n                              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                <FormControl>\n                                  <SelectTrigger className=\"text-base\">\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  <SelectItem value=\"en\">English</SelectItem>\n                                  <SelectItem value=\"es\">Spanish</SelectItem>\n                                  <SelectItem value=\"fr\">French</SelectItem>\n                                </SelectContent>\n                              </Select>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      <Separator />\n\n                      <FormField\n                        control={form.control}\n                        name=\"preferences.notifications\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                            <div className=\"space-y-0.5\">\n                              <FormLabel className=\"text-base\">\n                                Email Notifications\n                              </FormLabel>\n                              <FormDescription>\n                                User will receive email notifications for important updates and system events\n                              </FormDescription>\n                            </div>\n                            <FormControl>\n                              <Switch\n                                checked={field.value}\n                                onCheckedChange={field.onChange}\n                              />\n                            </FormControl>\n                          </FormItem>\n                        )}\n                      />\n\n                      <Alert>\n                        <Info className=\"h-4 w-4\" />\n                        <AlertTitle>About User Preferences</AlertTitle>\n                        <AlertDescription className=\"mt-2 space-y-2\">\n                          <p>• Users can modify these settings anytime from their profile</p>\n                          <p>• Language settings affect the interface display language</p>\n                          <p>• Theme preferences are applied immediately upon first login</p>\n                          <p>• Notification settings control email frequency and types</p>\n                        </AlertDescription>\n                      </Alert>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n              </div>\n            </Tabs>\n\n            <DialogFooter className=\"px-8 py-4 border-t bg-gray-50\">\n              <div className=\"flex items-center justify-between w-full\">\n                <div className=\"text-sm text-muted-foreground\">\n                  {!isFormValid() && (\n                    <span className=\"flex items-center gap-1 text-amber-600\">\n                      <AlertCircle className=\"h-3 w-3\" />\n                      Please complete all required fields\n                    </span>\n                  )}\n                </div>\n                <div className=\"flex gap-3\">\n                  <Button type=\"button\" variant=\"outline\" onClick={handleClose}>\n                    Cancel\n                  </Button>\n                  <Button \n                    type=\"submit\" \n                    disabled={!isFormValid() || loading}\n                    className=\"min-w-[140px]\"\n                  >\n                    {loading ? (\n                      <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        Creating...\n                      </>\n                    ) : sendInvitation ? (\n                      <>\n                        <Send className=\"mr-2 h-4 w-4\" />\n                        Send Invitation\n                      </>\n                    ) : (\n                      <>\n                        <Check className=\"mr-2 h-4 w-4\" />\n                        Create User\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6866, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/ServiceAccountList.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { \n  Key,\n  MoreHorizontal,\n  Plus,\n  Search,\n  Settings,\n  RefreshCw,\n  Shield,\n  ShieldOff,\n  Trash2,\n  Edit,\n  Copy,\n  Eye,\n  EyeOff,\n  AlertTriangle,\n  CheckCircle\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { toast } from '@/hooks/use-toast';\nimport { useDebounce } from '@/hooks/useDebounce';\nimport { apiClient } from '@/lib/api';\n\ninterface ServiceAccount {\n  id: string;\n  tenant_id: string;\n  name: string;\n  description?: string;\n  attributes: { [key: string]: any };\n  client_id: string;\n  is_active: boolean;\n  last_login?: string;\n  login_count: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ServiceAccountListProps {\n  onCreateNew: () => void;\n  onCountUpdate?: (count: number) => void;\n}\n\nexport function ServiceAccountList({ onCreateNew, onCountUpdate }: ServiceAccountListProps) {\n  const [serviceAccounts, setServiceAccounts] = useState<ServiceAccount[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [sortBy, setSortBy] = useState('created_at');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const [selectedAccount, setSelectedAccount] = useState<ServiceAccount | null>(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [rotateDialogOpen, setRotateDialogOpen] = useState(false);\n  const [newCredentials, setNewCredentials] = useState<{ client_id: string; client_secret: string } | null>(null);\n  const [showSecret, setShowSecret] = useState(false);\n\n  const debouncedSearch = useDebounce(search, 500);\n\n  useEffect(() => {\n    loadServiceAccounts();\n  }, [debouncedSearch, statusFilter, sortBy, sortOrder, currentPage]);\n\n  const loadServiceAccounts = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: '20',\n        sort: sortBy,\n        order: sortOrder,\n      });\n\n      if (debouncedSearch) {\n        params.append('search', debouncedSearch);\n      }\n\n      if (statusFilter !== 'all') {\n        params.append('is_active', statusFilter === 'active' ? 'true' : 'false');\n      }\n\n      const response = await apiClient.request(`/service-accounts?${params}`);\n      \n      setServiceAccounts(response.items || []);\n      setTotalCount(response.total || 0);\n      setTotalPages(response.pages || 1);\n      \n      // Update parent component with service account count\n      onCountUpdate?.(response.total || 0);\n    } catch (error) {\n      console.error('Failed to load service accounts:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to load service accounts',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleToggleStatus = async (account: ServiceAccount) => {\n    try {\n      await apiClient.request(`/service-accounts/${account.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify({\n          is_active: !account.is_active\n        })\n      });\n\n      await loadServiceAccounts();\n      toast({\n        title: 'Success',\n        description: `Service account ${account.is_active ? 'deactivated' : 'activated'}`,\n      });\n    } catch (error) {\n      console.error('Failed to toggle service account status:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update service account status',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!selectedAccount) return;\n\n    try {\n      await apiClient.request(`/service-accounts/${selectedAccount.id}`, {\n        method: 'DELETE'\n      });\n\n      await loadServiceAccounts();\n      setDeleteDialogOpen(false);\n      setSelectedAccount(null);\n      toast({\n        title: 'Success',\n        description: 'Service account deleted successfully',\n      });\n    } catch (error) {\n      console.error('Failed to delete service account:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to delete service account',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleRotateCredentials = async () => {\n    if (!selectedAccount) return;\n\n    try {\n      const response = await apiClient.request(`/service-accounts/${selectedAccount.id}/rotate-credentials`, {\n        method: 'POST'\n      });\n\n      setNewCredentials(response);\n      setRotateDialogOpen(false);\n      setSelectedAccount(null);\n      await loadServiceAccounts();\n      \n      toast({\n        title: 'Success',\n        description: 'Credentials rotated successfully',\n      });\n    } catch (error) {\n      console.error('Failed to rotate credentials:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to rotate credentials',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const copyToClipboard = (text: string, label: string) => {\n    navigator.clipboard.writeText(text);\n    toast({\n      title: 'Copied',\n      description: `${label} copied to clipboard`,\n    });\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Filters */}\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search service accounts...\"\n                  value={search}\n                  onChange={(e) => setSearch(e.target.value)}\n                  className=\"pl-8\"\n                />\n              </div>\n            </div>\n            \n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"w-[150px]\">\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"inactive\">Inactive</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select value={`${sortBy}-${sortOrder}`} onValueChange={(value) => {\n              const [field, order] = value.split('-');\n              setSortBy(field);\n              setSortOrder(order as 'asc' | 'desc');\n            }}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Sort by\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"created_at-desc\">Newest First</SelectItem>\n                <SelectItem value=\"created_at-asc\">Oldest First</SelectItem>\n                <SelectItem value=\"name-asc\">Name A-Z</SelectItem>\n                <SelectItem value=\"name-desc\">Name Z-A</SelectItem>\n                <SelectItem value=\"last_login-desc\">Recently Active</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Button variant=\"outline\" size=\"sm\" onClick={loadServiceAccounts}>\n              <RefreshCw className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Service Accounts Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <span>Service Accounts ({totalCount})</span>\n            <div className=\"text-sm font-normal text-muted-foreground\">\n              Page {currentPage} of {totalPages}\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-0\">\n          {loading ? (\n            <div className=\"flex items-center justify-center p-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n            </div>\n          ) : serviceAccounts.length === 0 ? (\n            <div className=\"text-center p-8\">\n              <Key className=\"mx-auto h-12 w-12 text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">No service accounts</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                Create your first service account to get started\n              </p>\n              <Button onClick={onCreateNew}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Service Account\n              </Button>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Name</TableHead>\n                    <TableHead>Client ID</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Usage</TableHead>\n                    <TableHead>Created</TableHead>\n                    <TableHead className=\"text-right\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {serviceAccounts.map((account) => (\n                    <TableRow key={account.id}>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-3\">\n                          <Avatar className=\"h-10 w-10\">\n                            <AvatarFallback>\n                              <Key className=\"h-4 w-4\" />\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <div className=\"font-medium\">{account.name}</div>\n                            {account.description && (\n                              <div className=\"text-sm text-muted-foreground\">\n                                {account.description}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </TableCell>\n                      \n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          <code className=\"bg-muted px-2 py-1 rounded text-xs\">\n                            {account.client_id.slice(0, 8)}...\n                          </code>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => copyToClipboard(account.client_id, 'Client ID')}\n                          >\n                            <Copy className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                      \n                      <TableCell>\n                        <Badge\n                          variant={account.is_active ? 'default' : 'secondary'}\n                          className={account.is_active ? 'bg-green-100 text-green-800' : ''}\n                        >\n                          {account.is_active ? 'Active' : 'Inactive'}\n                        </Badge>\n                      </TableCell>\n                      \n                      <TableCell>\n                        <div className=\"space-y-1\">\n                          <div className=\"text-sm font-medium\">\n                            {account.login_count.toLocaleString()} requests\n                          </div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            Last: {formatDate(account.last_login)}\n                          </div>\n                        </div>\n                      </TableCell>\n                      \n                      <TableCell className=\"text-sm text-muted-foreground\">\n                        {formatDate(account.created_at)}\n                      </TableCell>\n                      \n                      <TableCell className=\"text-right\">\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuItem onClick={() => {/* TODO: Open edit dialog */}}>\n                              <Edit className=\"h-4 w-4 mr-2\" />\n                              Edit\n                            </DropdownMenuItem>\n                            <DropdownMenuItem \n                              onClick={() => handleToggleStatus(account)}\n                            >\n                              {account.is_active ? (\n                                <ShieldOff className=\"h-4 w-4 mr-2\" />\n                              ) : (\n                                <Shield className=\"h-4 w-4 mr-2\" />\n                              )}\n                              {account.is_active ? 'Deactivate' : 'Activate'}\n                            </DropdownMenuItem>\n                            <DropdownMenuItem\n                              onClick={() => {\n                                setSelectedAccount(account);\n                                setRotateDialogOpen(true);\n                              }}\n                            >\n                              <RefreshCw className=\"h-4 w-4 mr-2\" />\n                              Rotate Credentials\n                            </DropdownMenuItem>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem\n                              className=\"text-red-600\"\n                              onClick={() => {\n                                setSelectedAccount(account);\n                                setDeleteDialogOpen(true);\n                              }}\n                            >\n                              <Trash2 className=\"h-4 w-4 mr-2\" />\n                              Delete\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"flex items-center justify-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            disabled={currentPage <= 1}\n            onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n          >\n            Previous\n          </Button>\n          \n          <div className=\"flex items-center space-x-1\">\n            {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n              const page = currentPage <= 3 ? i + 1 : currentPage - 2 + i;\n              if (page > totalPages) return null;\n              \n              return (\n                <Button\n                  key={page}\n                  variant={page === currentPage ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(page)}\n                >\n                  {page}\n                </Button>\n              );\n            })}\n          </div>\n          \n          <Button\n            variant=\"outline\"\n            disabled={currentPage >= totalPages}\n            onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n          >\n            Next\n          </Button>\n        </div>\n      )}\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <Trash2 className=\"h-5 w-5 text-red-600\" />\n              <span>Delete Service Account</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete <strong>{selectedAccount?.name}</strong>?\n              This action cannot be undone and will immediately revoke API access.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              className=\"bg-red-600 hover:bg-red-700\"\n            >\n              Delete Service Account\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Rotate Credentials Dialog */}\n      <AlertDialog open={rotateDialogOpen} onOpenChange={setRotateDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <RefreshCw className=\"h-5 w-5\" />\n              <span>Rotate Credentials</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription className=\"space-y-2\">\n              <p>\n                This will generate new credentials for <strong>{selectedAccount?.name}</strong>.\n              </p>\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded p-3\">\n                <div className=\"flex items-start space-x-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-600 mt-0.5\" />\n                  <div className=\"text-sm text-yellow-800\">\n                    <p className=\"font-medium\">Warning:</p>\n                    <p>The current credentials will be immediately invalidated. Update your applications with the new credentials.</p>\n                  </div>\n                </div>\n              </div>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={handleRotateCredentials}>\n              Rotate Credentials\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* New Credentials Dialog */}\n      <AlertDialog open={!!newCredentials} onOpenChange={() => setNewCredentials(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-green-600\" />\n              <span>New Credentials Generated</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription className=\"space-y-4\">\n              <p>Your new service account credentials have been generated. Please save them securely.</p>\n              \n              {newCredentials && (\n                <div className=\"bg-muted p-4 rounded-lg space-y-3\">\n                  <div>\n                    <label className=\"text-sm font-medium\">Client ID</label>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <code className=\"flex-1 bg-background p-2 rounded text-xs\">\n                        {newCredentials.client_id}\n                      </code>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => copyToClipboard(newCredentials.client_id, 'Client ID')}\n                      >\n                        <Copy className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"text-sm font-medium\">Client Secret</label>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <code className=\"flex-1 bg-background p-2 rounded text-xs\">\n                        {showSecret ? newCredentials.client_secret : '••••••••••••••••'}\n                      </code>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setShowSecret(!showSecret)}\n                      >\n                        {showSecret ? <EyeOff className=\"h-3 w-3\" /> : <Eye className=\"h-3 w-3\" />}\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => copyToClipboard(newCredentials.client_secret, 'Client Secret')}\n                      >\n                        <Copy className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"bg-red-50 border border-red-200 rounded p-3\">\n                <div className=\"flex items-start space-x-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-600 mt-0.5\" />\n                  <div className=\"text-sm text-red-800\">\n                    <p className=\"font-medium\">Important:</p>\n                    <p>This is the only time the client secret will be shown. Make sure to save it securely.</p>\n                  </div>\n                </div>\n              </div>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogAction onClick={() => setNewCredentials(null)}>\n              I've Saved the Credentials\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8299, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 8322, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/components/users/CreateServiceAccountDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { \n  Loader2, \n  Key, \n  CheckCircle, \n  Copy, \n  Eye, \n  EyeOff,\n  AlertTriangle \n} from 'lucide-react';\nimport { apiClient } from '@/lib/api';\nimport { toast } from '@/hooks/use-toast';\n\nconst createServiceAccountSchema = z.object({\n  name: z\n    .string()\n    .min(3, 'Name must be at least 3 characters')\n    .max(255, 'Name must be less than 255 characters'),\n  description: z\n    .string()\n    .optional(),\n  attributes: z.object({\n    purpose: z.string().optional(),\n    environment: z.string().optional(),\n    owner: z.string().optional(),\n  }),\n  is_active: z.boolean().default(true),\n});\n\ntype CreateServiceAccountFormData = z.infer<typeof createServiceAccountSchema>;\n\ninterface CreateServiceAccountDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\ninterface Credentials {\n  client_id: string;\n  client_secret: string;\n}\n\nexport function CreateServiceAccountDialog({ \n  open, \n  onOpenChange, \n  onSuccess \n}: CreateServiceAccountDialogProps) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [credentials, setCredentials] = useState<Credentials | null>(null);\n  const [showSecret, setShowSecret] = useState(false);\n\n  const form = useForm<CreateServiceAccountFormData>({\n    resolver: zodResolver(createServiceAccountSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      attributes: {\n        purpose: '',\n        environment: '',\n        owner: '',\n      },\n      is_active: true,\n    },\n  });\n\n  const onSubmit = async (data: CreateServiceAccountFormData) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Prepare the data according to API format\n      const serviceAccountData = {\n        name: data.name,\n        description: data.description || undefined,\n        attributes: Object.fromEntries(\n          Object.entries(data.attributes).filter(([_, value]) => value)\n        ),\n        is_active: data.is_active,\n      };\n\n      const response = await apiClient.request('/service-accounts', {\n        method: 'POST',\n        body: JSON.stringify(serviceAccountData),\n      });\n      \n      console.log('Service account created:', response);\n      \n      // Response should contain both service_account and credentials\n      if (response.credentials) {\n        setCredentials(response.credentials);\n      }\n      \n      onSuccess?.();\n    } catch (err: any) {\n      console.error('Create service account error:', err);\n      setError(err.message || 'Failed to create service account');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (!credentials) {\n      form.reset();\n      setError(null);\n      onOpenChange(false);\n    }\n  };\n\n  const handleCredentialsCopied = () => {\n    setCredentials(null);\n    form.reset();\n    setError(null);\n    setShowSecret(false);\n    onOpenChange(false);\n  };\n\n  const copyToClipboard = (text: string, label: string) => {\n    navigator.clipboard.writeText(text);\n    toast({\n      title: 'Copied',\n      description: `${label} copied to clipboard`,\n    });\n  };\n\n  // If credentials are generated, show the credentials dialog\n  if (credentials) {\n    return (\n      <Dialog open={open} onOpenChange={() => {}}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-green-600\" />\n              <span>Service Account Created</span>\n            </DialogTitle>\n            <DialogDescription>\n              Your service account has been created successfully. Please save these credentials securely.\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div className=\"bg-muted p-4 rounded-lg space-y-3\">\n              <div>\n                <label className=\"text-sm font-medium\">Client ID</label>\n                <div className=\"flex items-center space-x-2 mt-1\">\n                  <code className=\"flex-1 bg-background p-2 rounded text-xs\">\n                    {credentials.client_id}\n                  </code>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => copyToClipboard(credentials.client_id, 'Client ID')}\n                  >\n                    <Copy className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"text-sm font-medium\">Client Secret</label>\n                <div className=\"flex items-center space-x-2 mt-1\">\n                  <code className=\"flex-1 bg-background p-2 rounded text-xs\">\n                    {showSecret ? credentials.client_secret : '••••••••••••••••'}\n                  </code>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowSecret(!showSecret)}\n                  >\n                    {showSecret ? <EyeOff className=\"h-3 w-3\" /> : <Eye className=\"h-3 w-3\" />}\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => copyToClipboard(credentials.client_secret, 'Client Secret')}\n                  >\n                    <Copy className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n            \n            <Alert variant=\"destructive\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <strong>Important:</strong> This is the only time the client secret will be shown. \n                Make sure to save it in a secure location before closing this dialog.\n              </AlertDescription>\n            </Alert>\n          </div>\n\n          <DialogFooter>\n            <Button onClick={handleCredentialsCopied} className=\"w-full\">\n              I've Saved the Credentials\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={handleClose}>\n      <DialogContent className=\"sm:max-w-[500px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2\">\n            <Key className=\"h-5 w-5\" />\n            <span>Create Service Account</span>\n          </DialogTitle>\n          <DialogDescription>\n            Create a new service account for API access. Service accounts use client credentials \n            for authentication and can be used for automated integrations.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {error && (\n              <Alert variant=\"destructive\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium\">Basic Information</h4>\n              \n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Name *</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., Production API Client\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      A descriptive name for this service account\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Optional description of what this service account is used for...\"\n                        className=\"min-h-[80px]\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Describe the purpose and usage of this service account\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Attributes */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-sm font-medium\">Additional Information</h4>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"attributes.purpose\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Purpose</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Data sync\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"attributes.environment\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Environment</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Production\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"attributes.owner\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Owner</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., DevOps Team\" {...field} />\n                    </FormControl>\n                    <FormDescription>\n                      Team or person responsible for this service account\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Status */}\n            <FormField\n              control={form.control}\n              name=\"is_active\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel>\n                      Active service account\n                    </FormLabel>\n                    <FormDescription>\n                      Service account can authenticate and access the API\n                    </FormDescription>\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <DialogFooter>\n              <Button type=\"button\" variant=\"outline\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={loading}>\n                {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                <Key className=\"mr-2 h-4 w-4\" />\n                Create Service Account\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9146, "column": 0}, "map": {"version":3,"sources":["file:///Users/rs/Documents/workspaces/Neuwerx%20Products/sentinel/sentinel-claude-code/neuwerx-platform/sentinel/frontend/src/app/%28dashboard%29/users/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Plus, Users, Key, ShieldCheck } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { UserList } from '@/components/users/UserList';\nimport { CreateUserDialog } from '@/components/users/CreateUserDialog';\nimport { ServiceAccountList } from '@/components/users/ServiceAccountList';\nimport { CreateServiceAccountDialog } from '@/components/users/CreateServiceAccountDialog';\nimport { BulkOperationsProvider } from '@/components/users/BulkOperationsProvider';\n\nexport default function UsersPage() {\n  const [activeTab, setActiveTab] = useState('users');\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const [showCreateServiceAccount, setShowCreateServiceAccount] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [userCount, setUserCount] = useState(0);\n  const [serviceAccountCount, setServiceAccountCount] = useState(0);\n\n  const handleRefreshUsers = () => {\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  const handleUserCountUpdate = (count: number) => {\n    setUserCount(count);\n  };\n\n  const handleServiceAccountCountUpdate = (count: number) => {\n    setServiceAccountCount(count);\n  };\n\n  // Tab configurations with metadata\n  const tabConfigs = {\n    users: {\n      id: 'users',\n      label: 'Users',\n      icon: Users,\n      count: userCount,\n      description: 'Manage system users, their profiles, and access permissions',\n      buttonText: 'Add User',\n      buttonAction: () => setShowCreateUser(true)\n    },\n    'service-accounts': {\n      id: 'service-accounts',\n      label: 'Service Accounts',\n      icon: Key,\n      count: serviceAccountCount,\n      description: 'Manage API service accounts for automated integrations',\n      buttonText: 'New Service Account',\n      buttonAction: () => setShowCreateServiceAccount(true)\n    }\n  };\n\n  const currentTab = tabConfigs[activeTab as keyof typeof tabConfigs];\n\n  return (\n    <BulkOperationsProvider onRefresh={handleRefreshUsers}>\n      <div className=\"space-y-8\">\n        {/* Enhanced Header */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-primary/10 rounded-lg\">\n              <ShieldCheck className=\"h-6 w-6 text-primary\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold tracking-tight\">User Management</h1>\n              <p className=\"text-muted-foreground\">\n                Comprehensive user and access management for your organization\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Enhanced Tabbed Interface */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          {/* Tab Header with Action Button */}\n          <div className=\"flex flex-col space-y-4 lg:flex-row lg:items-center lg:justify-between lg:space-y-0\">\n            <div className=\"space-y-2\">\n              <TabsList className=\"grid w-full grid-cols-2 lg:w-fit bg-muted p-1 rounded-lg h-auto\">\n                {Object.values(tabConfigs).map((config) => {\n                  const Icon = config.icon;\n                  return (\n                    <TabsTrigger \n                      key={config.id}\n                      value={config.id}\n                      className=\"flex items-center justify-center space-x-2 px-4 py-3 data-[state=active]:bg-background data-[state=active]:shadow-sm rounded-md transition-all\"\n                    >\n                      <Icon className=\"h-4 w-4 flex-shrink-0\" />\n                      <span className=\"text-sm font-medium\">{config.label}</span>\n                      {config.count > 0 && (\n                        <Badge \n                          variant=\"secondary\" \n                          className=\"ml-1 text-xs min-w-[1.25rem] h-5 flex items-center justify-center bg-background/80 text-foreground border\"\n                        >\n                          {config.count}\n                        </Badge>\n                      )}\n                    </TabsTrigger>\n                  );\n                })}\n              </TabsList>\n              \n              {/* Contextual Description */}\n              <p className=\"text-sm text-muted-foreground leading-relaxed lg:max-w-md\">\n                {currentTab?.description}\n              </p>\n            </div>\n\n            {/* Contextual Action Button */}\n            <Button \n              onClick={currentTab?.buttonAction}\n              size=\"lg\"\n              className=\"flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl transition-all duration-200 bg-primary hover:bg-primary/90 w-full lg:w-auto\"\n            >\n              <Plus className=\"h-4 w-4 flex-shrink-0\" />\n              <span className=\"font-medium\">{currentTab?.buttonText}</span>\n            </Button>\n          </div>\n\n          {/* Tab Content with Enhanced Cards */}\n          <div className=\"space-y-6\">\n            <TabsContent value=\"users\" className=\"space-y-0\">\n              <Card className=\"border-0 shadow-sm bg-card/50\">\n                <CardContent className=\"p-6\">\n                  <UserList \n                    key={refreshTrigger} \n                    onCountUpdate={handleUserCountUpdate}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"service-accounts\" className=\"space-y-0\">\n              <Card className=\"border-0 shadow-sm bg-card/50\">\n                <CardContent className=\"p-6\">\n                  <ServiceAccountList \n                    onCreateNew={() => setShowCreateServiceAccount(true)}\n                    onCountUpdate={handleServiceAccountCountUpdate}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </div>\n        </Tabs>\n\n        {/* Dialogs */}\n        <CreateUserDialog \n          open={showCreateUser} \n          onOpenChange={setShowCreateUser}\n          onSuccess={() => {\n            handleRefreshUsers();\n          }}\n        />\n\n        <CreateServiceAccountDialog\n          open={showCreateServiceAccount}\n          onOpenChange={setShowCreateServiceAccount}\n          onSuccess={() => {\n            // Trigger refresh of service account list\n            setRefreshTrigger(prev => prev + 1);\n          }}\n        />\n      </div>\n    </BulkOperationsProvider>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}